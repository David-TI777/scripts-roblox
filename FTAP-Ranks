local OrionLib = loadstring(game:HttpGet(("https://raw.githubusercontent.com/shlexware/Orion/main/source")))()

-- Configurações do grupo
local GroupID = 16168861
local AllowedRanks = {"High Rank Admin", "Low Rank Admin", "Lower Rank Admin"}

-- Tabelas para armazenamento de dados
local playerData = {}
local commandLogs = {}

-- Função para verificar se um jogador tem um cargo permitido
function PlayerHasRequiredRank(player)
    local success, result = pcall(function()
        local groupInfo = game:GetService("GroupService"):GetGroupInfoAsync(GroupID)
        if groupInfo then
            local userRole = groupInfo.Roles:GetRoleForUser(player.UserId)
            if userRole then
                for _, allowedRank in ipairs(AllowedRanks) do
                    if userRole.Name == allowedRank then
                        return true
                    end
                end
            end
        end
        return false
    end)
    return success and result
end

-- Função para obter informações do rank de um jogador
function GetPlayerRankInfo(player)
    local success, result = pcall(function()
        local groupInfo = game:GetService("GroupService"):GetGroupInfoAsync(GroupID)
        if groupInfo then
            local userRole = groupInfo.Roles:GetRoleForUser(player.UserId)
            if userRole then
                return userRole.Name, userRole.Rank
            end
        end
        return "Sem Rank", 0
    end)
    
    if success then
        return result, 0
    else
        return "Erro ao carregar", 0
    end
end

-- Função para adicionar log de comando
function AddCommandLog(player, command)
    local timestamp = os.date("%H:%M:%S")
    local logEntry = {
        Player = player.Name,
        Command = command,
        Time = timestamp
    }
    
    table.insert(commandLogs, 1, logEntry)
    
    -- Limita o log aos 50 últimos comandos
    if #commandLogs > 50 then
        table.remove(commandLogs, 51)
    end
    
    -- Atualiza a interface se estiver aberta
    if OrionLib:GetWindow("CommandLogs") then
        UpdateCommandLogsUI()
    end
end

-- Criar a janela principal do OrionLib
local Window = OrionLib:MakeWindow({
    Name = "Sistema de Administração",
    HidePremium = false,
    SaveConfig = false,
    ConfigFolder = "AdminConfig"
})

-- Aba para listar jogadores online e seus ranks
local PlayersTab = Window:MakeTab({
    Name = "Jogadores Online",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Aba para visualizar logs de comandos
local LogsTab = Window:MakeTab({
    Name = "Logs de Comandos",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Elementos da UI para jogadores
local playerListLabel = PlayersTab:AddSection({
    Name = "Jogadores Conectados"
})

local playerFrames = {}
local playerSections = {}

-- Elementos da UI para logs
local logsLabel = LogsTab:AddSection({
    Name = "Últimos Comandos Executados"
})

local logsText = LogsTab:AddParagraph("", "")

-- Função para atualizar a lista de jogadores
function UpdatePlayersUI()
    for _, section in pairs(playerSections) do
        section:Remove()
    end
    playerSections = {}
    
    for _, player in ipairs(game.Players:GetPlayers()) do
        local rankName, rankNumber = GetPlayerRankInfo(player)
        local isAdmin = PlayerHasRequiredRank(player)
        
        local adminStatus = isAdmin and "✅" or "❌"
        local playerColor = isAdmin and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 255, 255)
        
        local section = PlayersTab:AddSection({
            Name = player.Name .. " " .. adminStatus,
            Default = false
        })
        
        section:AddLabel("Rank: " .. rankName .. " (#" .. tostring(rankNumber) .. ")")
        section:AddLabel("UserID: " .. player.UserId)
        
        playerSections[player.Name] = section
        playerData[player.Name] = {
            Rank = rankName,
            RankNumber = rankNumber,
            IsAdmin = isAdmin
        }
    end
end

-- Função para atualizar os logs de comandos
function UpdateCommandLogsUI()
    local logText = ""
    
    for i, log in ipairs(commandLogs) do
        logText = logText .. string.format("[%s] %s: %s\n", log.Time, log.Player, log.Command)
    end
    
    logsText:Set(logText)
end

-- Monitorar quando jogadores entram e saem
game.Players.PlayerAdded:Connect(function(player)
    wait(1) -- Espera um pouco para carregar as informações
    UpdatePlayersUI()
    
    -- Monitorar comandos deste jogador
    player.Chatted:Connect(function(message)
        if string.sub(message, 1, 1) == ":" then
            AddCommandLog(player, message)
        end
    end)
end)

game.Players.PlayerRemoving:Connect(function(player)
    wait(1) -- Espera um pouco para atualizar
    UpdatePlayersUI()
end)

-- Atualizar a interface periodicamente
local refreshLoop
refreshLoop = game:GetService("RunService").Heartbeat:Connect(function()
    UpdatePlayersUI()
    UpdateCommandLogsUI()
end)

-- Inicializar a interface
UpdatePlayersUI()
UpdateCommandLogsUI()

-- Adicionar botão de atualização manual
PlayersTab:AddButton({
    Name = "Atualizar Lista",
    Callback = function()
        UpdatePlayersUI()
        OrionLib:MakeNotification({
            Name = "Lista atualizada!",
            Content = "Lista de jogadores foi atualizada.",
            Image = "rbxassetid://4483345998",
            Time = 3
        })
    end
})

-- Adicionar botão para limpar logs
LogsTab:AddButton({
    Name = "Limpar Logs",
    Callback = function()
        commandLogs = {}
        UpdateCommandLogsUI()
        OrionLib:MakeNotification({
            Name = "Logs limpos!",
            Content = "Todos os logs de comandos foram removidos.",
            Image = "rbxassetid://4483345998",
            Time = 3
        })
    end
})

-- Inicializar a OrionLib
OrionLib:Init()

-- Notificação de inicialização
OrionLib:MakeNotification({
    Name = "Sistema carregado!",
    Content = "Menu de administração inicializado com sucesso.",
    Image = "rbxassetid://4483345998",
    Time = 5
})

print("Sistema de monitoramento OrionLib carregado com sucesso!")
